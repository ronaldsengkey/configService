https:
  port: 8443
  tls:
    "sandbox.api.ultipay.id":
      cert: ./ssl/fullchain.pem
      key: ./ssl/privkey.pem
  # options:
  #   requestCert: false
  #   rejectUnauthorized: false
# http:
#   port: 8006
#   hostname: localhost
admin:
  port: 8444
  host: "localhost"
apiEndpoints:
  # wallet:
  #   host: "sandbox.api.ultipay.id"
  #   paths: "/wallet/*"
  walletPost:
    host: "*"
    paths:
      [
        "/wallet/login",
        "/wallet/pin",
        "/wallet/pin/validation",
        "/wallet/saldo",
        "/wallet/ticketing",
        "/wallet/requestToken",
        "/wallet/checkToken",
        "/wallet/otp/request/email",
        "/wallet/otp/confirmation/*",
        "/wallet/transaction/billFazz/postpaid",
        "/wallet/transaction/billFazz/inquiry",
        "/wallet/transaction/billFazz/prepaid/payment",
        "/wallet/transaction/mid/response",
        "/wallet/transaction/mid/response/error",
        "/wallet/transaction/splitBill/response",
        "/wallet/transaction/splitBill/request",
        "/wallet/summary/transaction",
        "/wallet/transaction",
        "/wallet/transaction/topup",
        "/wallet/transaction/splitBill",
        "/wallet/billing/*",
        "/wallet/hotel/search",
        "/wallet/hotel/city/search",
        "/wallet/booking/search/*",
        "/wallet/merchant/search",
        "/wallet/merchant/book/*",
        "/wallet/flight/search",
        "/wallet/flight/addToCart",
        "/wallet/flight/getCart",
        "/wallet/flight/book",
        "/wallet/flight/order",
        "/wallet/flight/checkout",
        "/wallet/reservation",
        "/wallet/kyc",
        "/wallet/kyc/response/*",
        "/wallet/friend",
        "/wallet/friend/search",
        "/wallet/friend/request",
        "/wallet/friend/friendRequest",
        "/wallet/friend/response",
        "/wallet/product",
        "/wallet/bank/detail/*",
        "wallet/confirmDevice"
      ]
  walletGet:
    host: "*"
    paths:
      [
        "/wallet/transaction/billFazz",
        "/wallet/card",
        "/wallet/card/category",
        "/wallet/card/background",
        "/wallet/promotion/outlet",
        "/wallet/transaction/history",
        "/wallet/merchant/*",
        "/wallet/merchant/detail/*",
        "/wallet/booking/*",
        "/wallet/clientKey/request",
        "/wallet/roles/*",
        "/wallet/mynotif",
        "/wallet/transaction/basket",
        "/wallet/transaction/category",
        "/wallet/transaction/detail/*",
        "/wallet/transaction/mid/finish",
        "/wallet/transaction/mid/unfinish",
        "/wallet/bank",
        "/wallet/location",
        "/wallet/saldo/generate",
        "/wallet/kyc/allList/*",
        "/wallet/version/checkUpdate/"
      ]
  walletPut:
    host: "*"
    paths:
      [
        "/wallet/changeRequest/registration/phone/*",
        "/wallet/change/registration/email/*",
        "/wallet/otp/*",
        "/wallet/logout",
      ]
  walletCronJob:
    host: "*"
    paths:
      [
        "/wallet/cronjob/billfazz/", "/wallet/cronjob/saveSaldo/", "/wallet/cronjob/getSaldo/{id}/",
      ]  
  config1:
    host: "*"
    paths: ["/config/getApiService/*", "/config/test2"]
  config2:
    host: "*"
    paths: ["/config/test3"]
  authentications:
    host: "sandbox.api.ultipay.id"
    paths: "/authentications/*"
  outlet:
    host: "sandbox.api.ultipay.id"
    paths: "/outlet/*"
  account:
    host: "sandbox.api.ultipay.id"
    paths: "/account/*"
  backend:
    host: "sandbox.api.ultipay.id"
    paths: "/backend/*"
  transaction:
    host: "sandbox.api.ultipay.id"
    paths: "/transaction/*"
  paymentGateway:
    host: "sandbox.api.ultipay.id"
    paths: "/paymentGateway/*"
serviceEndpoints:
  wallet:
    url: "http://localhost:8089"
  config:
    url: "http://localhost:8204"
  authentications:
    url: "http://localhost:8202"
  outlet:
    url: "http://localhost:8205"
  account:
    url: "http://localhost:8206"
  backend:
    url: "http://localhost:8203"
  transaction:
    url: "http://localhost:8201"
  paymentGateway:
    url: "http://localhost:8200"
  httpbin:
    url: "https://httpbin.org"
policies:
  - jwt
  - basic-auth
  - cors
  - expression
  - key-auth
  - log
  - oauth2
  - proxy
  - rate-limit
pipelines:
  default:
    apiEndpoints:
      - api
    policies:
      # Uncomment `key-auth:` when instructed to in the Getting Started guide.
      - key-auth:
      # - oauth2:
      - proxy:
          - action:
              serviceEndpoint: httpbin
              changeOrigin: true
  # wallet:
  #   apiEndpoints:
  #     - wallet
  #   policies:
  #     - rate-limit:
  #         - action:
  #             max: 10
  #             windowMs: 90000

  #     - proxy:
  #         - action:
  #             serviceEndpoint: wallet
  #             changeOrigin: true

  walletPost:
    apiEndpoints:
      - walletPost
    policies:
      - cors:
          - action:
              origin: true
              methods: ["POST"]
              allowedHeaders:
                [
                  "Content-type",
                  "Origin",
                  "Accept",
                  "X-Requested-With",
                  "X-TEST",
                ]
              credentials: true
              preflightContinue: true
      - rate-limit:
          - action:
              max: 5
              windowMs: 90000
      - proxy:
          - action:
              serviceEndpoint: wallet
              changeOrigin: true

  walletGet:
    apiEndpoints:
      - walletGet
    policies:
      - cors:
          - action:
              origin: true
              methods: ["GET"]
              allowedHeaders:
                [
                  "Content-type",
                  "Origin",
                  "Accept",
                  "X-Requested-With",
                  "X-TEST",
                ]
              credentials: true
              preflightContinue: true
      - rate-limit:
          - action:
              max: 10
              windowMs: 90000
      - proxy:
          - action:
              serviceEndpoint: wallet
              changeOrigin: true

  walletPut:
    apiEndpoints:
      - walletPut
    policies:
      - cors:
          - action:
              origin: true
              methods: ["PUT"]
              allowedHeaders:
                [
                  "Content-type",
                  "Origin",
                  "Accept",
                  "X-Requested-With",
                  "X-TEST",
                ]
              credentials: true
              preflightContinue: true
      - rate-limit:
          - action:
              max: 5
              windowMs: 90000
      - proxy:
          - action:
              serviceEndpoint: wallet
              changeOrigin: true

  walletCronJob:
    apiEndpoints:
      - walletCronJob
    policies:
      - cors:
          - action:
              origin: true
              methods: ["GET", "POST"]
              allowedHeaders:
                [
                  "Content-type",
                  "Origin",
                  "Accept",
                  "X-Requested-With",
                  "X-TEST",
                ]
              credentials: true
              preflightContinue: true
      - rate-limit:
          - action:
              max: 25
              windowMs: 90000
      - proxy:
          - action:
              serviceEndpoint: wallet
              changeOrigin: true

  paymentGateway:
    apiEndpoints:
      - paymentGateway
    policies:
      - rate-limit:
          - action:
              max: 10
              windowMs: 90000
      - proxy:
          - action:
              serviceEndpoint: paymentGateway
              changeOrigin: true

  config1:
    apiEndpoints:
      - config1
    policies:
      - cors:
          - action:
              origin: true
              methods: ["GET", "POST", "PUT", "DELETE", "PATCH", "OPTIONS"]
              allowedHeaders:
                [
                  "Content-type",
                  "Authorization",
                  "Origin",
                  "Accept",
                  "X-Requested-With",
                  "X-TEST",
                ]
              credentials: true
              preflightContinue: false
      - rate-limit:
          - action:
              max: 5
              windowMs: 20000
      - proxy:
          - action:
              serviceEndpoint: config
              changeOrigin: true

  config2:
    apiEndpoints:
      - config2
    policies:
      - rate-limit:
          - action:
              max: 2
              # windowMs: 90000
              windowMs: 10000
      - proxy:
          - action:
              serviceEndpoint: config
              changeOrigin: true

  authentications:
    apiEndpoints:
      - authentications
    policies:
      - rate-limit:
          - action:
              max: 10
              windowMs: 90000
      - key-auth:
      - proxy:
          - action:
              serviceEndpoint: authentications
              changeOrigin: true

  outlet:
    apiEndpoints:
      - outlet
    policies:
      - rate-limit:
          - action:
              max: 10
              windowMs: 90000
      - key-auth:
      - proxy:
          - action:
              serviceEndpoint: outlet
              changeOrigin: true

  account:
    apiEndpoints:
      - account
    policies:
      - rate-limit:
          - action:
              max: 10
              windowMs: 90000
      # - key-auth:
      - proxy:
          - action:
              serviceEndpoint: account
              changeOrigin: true
  backend:
    apiEndpoints:
      - backend
    policies:
      - rate-limit:
          - action:
              max: 10
              windowMs: 90000
      - key-auth:
          - action:
              apiKeyHeader: "authorization"
              apiKeyHeaderScheme: "apiKey"
      # - jwt:
      #   - action:
      #       secretOrPublicKeyFile: ./key/pubKey.pem
      #       checkCredentialExistence: false
      - proxy:
          - action:
              serviceEndpoint: backend
              changeOrigin: true

  transaction:
    apiEndpoints:
      - transaction
    policies:
      - rate-limit:
          - action:
              max: 10
              windowMs: 90000
      - key-auth:
      - proxy:
          - action:
              serviceEndpoint: transaction
              changeOrigin: true
